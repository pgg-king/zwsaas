import{l as h}from"./lodash.28c974ad.js";import"./vue.4c5758a0.js";import{F as k,D as v,T as C}from"./ant-design-vue.e954adc4.js";import{d as K,w as x,r as p,h as S}from"./@vue.87afd1fa.js";import"./@babel.dd651e2b.js";import"./regenerator-runtime.8e24db72.js";import"./@ant-design.8c82b126.js";import"./@ctrl.fa7cbd46.js";import"./resize-observer-polyfill.8deb1e21.js";import"./vue-types.6e6d84ba.js";import"./dom-align.f1b5d360.js";import"./lodash-es.0ea26897.js";import"./dayjs.0743a87f.js";import"./async-validator.5d25c98b.js";import"./scroll-into-view-if-needed.5191fdbf.js";import"./compute-scroll-into-view.6058b3be.js";var P=K({name:"ExTree",props:{value:Array,directory:Boolean,uncheckParentValue:Boolean},emits:["update:value"],setup(o,s){const c=k.useInjectFormItemContext();x(()=>o.value,e=>{c.onFieldChange()});const t=s.attrs,l=s.emit,n=h.exports.clone(o.value);!t.checkStrictly&&t.checkable&&i(t.treeData);const u=p(n),d=p(n);function i(e,r=[]){let m=0;e.forEach(a=>{o.value.indexOf(a[t.fieldNames.key])>-1&&m++,a[t.fieldNames.children]&&(r.push(a[t.fieldNames.key]),i(a[t.fieldNames.children],r))}),m<e.length&&r&&h.exports.pullAll(n,r)}function f(e,r){t.checkStrictly?l("update:value",e.checked):(e=e.concat(r.halfCheckedKeys),l("update:value",e))}function y(e){l("update:value",e)}return{selectedKeys:u,onSelect:y,onCheck:f,checkedKeys:d}},render(o){let s=Object.assign({onCheck:this.onCheck,onSelect:this.onSelect,selectedKeys:this.selectedKeys,"onUpdate:selectedKeys":c=>{this.selectedKeys=c},checkedKeys:this.checkedKeys,"onUpdate:checkedKeys":c=>{this.checkedKeys=c}},o.$attrs);return S(s.directory?v:C,s,o.$slots)}});export{P as default};
